name: CI/CD for Model Deployment with AKS and ACR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Authenticate with Azure CLI
      - name: Authenticate with Azure CLI
        run: az login --use-device-code

      # Step 3: Attach ACR to AKS (Ensure resources are in the correct group)
      - name: Attach ACR to AKS
        run: |
          az aks update \
            --resource-group rg-aks-acr-terraform \
            --name aks-terraform-cluster \
            --attach-acr acrterraformSepsisStreaming

      # Step 4: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t acrterraformsepsisstreaming.azurecr.io/randomforest:staging .

      # Step 5: Login to ACR using Admin Credentials
      - name: Login to ACR
        run: |
          docker login acrterraformsepsisstreaming.azurecr.io \
            -u "acrterraformSepsisStreaming" \
            -p "PQ3Te9RolGBeaiwpouUmh0BFCQSSB0ECqFKHegFJub+ACRCH/KKk"

      # Step 6: Push Docker Image to ACR
      - name: Push Docker Image to ACR
        run: |
          docker push acrterraformsepsisstreaming.azurecr.io/randomforest:staging

      # Step 7: Configure kubectl for AKS
      - name: Configure kubectl
        run: |
          az aks get-credentials \
            --resource-group rg-aks-acr-terraform \
            --name aks-terraform-cluster \
            --overwrite-existing

      # Step 8: Deploy Application to AKS
      - name: Deploy Application
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
